(()=>{"use strict";var t,r=new Uint8Array(16);function e(){if(!t&&!(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(r)}const o=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,a=function(t){return"string"==typeof t&&o.test(t)};for(var n=[],i=0;i<256;++i)n.push((i+256).toString(16).substr(1));const l=function(t,r,o){var i=(t=t||{}).random||(t.rng||e)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,r){o=o||0;for(var l=0;l<16;++l)r[o+l]=i[l];return r}return function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=(n[t[r+0]]+n[t[r+1]]+n[t[r+2]]+n[t[r+3]]+"-"+n[t[r+4]]+n[t[r+5]]+"-"+n[t[r+6]]+n[t[r+7]]+"-"+n[t[r+8]]+n[t[r+9]]+"-"+n[t[r+10]]+n[t[r+11]]+n[t[r+12]]+n[t[r+13]]+n[t[r+14]]+n[t[r+15]]).toLowerCase();if(!a(e))throw TypeError("Stringified UUID is invalid");return e}(i)};function s(t){return[{ą:"a"},{ę:"e"},{ź:"z"},{ż:"z"},{ć:"c"},{ń:"n"},{ł:"l"},{ó:"o"},{ś:"s"},{ä:"ae"},{ö:"oe"},{ü:"ue"},{ß:"ss"},{".":""}].forEach((r=>{const[e,o]=Object.keys(r);t=t.replaceAll(e,o)})),t}class d{constructor(t,r,e=null){this.originalText=t,this.translatedText=r,this.id=e??l().toString().substr(0,5)}checkTranslation(t,r){if(t=s(t=t.toLowerCase().trim()),"to"!==r&&"from"!==r)throw new Error("Wrong direction");let e=this;return e.translatedText=e.translatedText.toLowerCase().trim(),e.translatedText=s(e.translatedText),e.originalText=e.originalText.toLowerCase().trim(),e.originalText=s(e.originalText),"to"===r?t===e.originalText:t===e.translatedText}static localStorageTag="learner_data";static loadFromStorage(t=!0,r=null){let e=JSON.parse(localStorage.getItem(d.localStorageTag));if(!e||0===e.length)return[];let o=e;if(o instanceof Array==0)throw new Error("Data must be array!");let a=o.map((t=>new d(t.originalText,t.translatedText,t.id)));if(t)return a;if(r)return a.find((t=>t.id===r));const n=a.length;let i;do{i=Math.floor(Math.random()*(n-0)+0)}while(d.loadFromStorage.prevIndex===i);return d.loadFromStorage.prevIndex=i,console.log("random: ",i),console.log("Prev:",d.loadFromStorage.prevIndex),a[i]}static saveToStorage(t){if(!(t instanceof d))throw new Error("Instance of Phrase required!");let r=d.loadFromStorage(),e=!1;for(let o=0;o<r.length;o++)r[o].id===t.id&&(r[o].originalText=t.originalText,r[o].translatedText=t.translatedText,e=!0);e||r.push(t);let o=JSON.stringify(r);localStorage.setItem(d.localStorageTag,o)}static removeFromStorage(t){let r=d.loadFromStorage(),e=r.findIndex((r=>r.id===t));if(-1===e)throw new Error("Phrase not found");r.splice(e,1),localStorage.setItem(d.localStorageTag,JSON.stringify(r))}}let g=new d("orig","tran");d.saveToStorage(g),d.loadFromStorage()})();